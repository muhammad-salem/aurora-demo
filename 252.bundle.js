"use strict";(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([[252],{252:(t,e,a)=>{a.r(e),a.d(e,{SimpleCustomInputElement:()=>o,SimpleCustomMessage:()=>m,SimpleCustomTextareaComponent:()=>n,SimpleForm:()=>i});var s=a(608),l=a(684);let n=(()=>{let t,e,a=[(0,l.uAl)({selector:"simple-custom-textarea",extend:"textarea",formAssociated:!0})],n=[];return class{static{e=this}static{const l="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,s.G4)(null,t={value:e},a,{kind:"class",name:e.name,metadata:l},null,n),e=t.value,l&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:l}),(0,s.zF)(e,n)}text="";_onChange=()=>{};onInit(){setTimeout((()=>this.updateTextarea("test textarea")),2e3),console.log(this)}updateTextarea(t){this.text=t,this._onChange(t)}writeValue(t){this.text="reset"!==t.mode?t.value:""}registerOnChange(t){this._onChange=t}onChanges(){console.log(JSON.parse(JSON.stringify(this)))}},e})(),m=(()=>{let t,e,a,n=[(0,l.uAl)({selector:"simple-custom-message",template:'\n\t\t\t<label for="message" class="form-label">Message</label>\n\t\t\t<textarea class="form-control"\n\t\t\t\tid="message"\n\t\t\t\tname="message-textarea"\n\t\t\t\trows="3"\n\t\t\t\t[(value)]="message" \n\t\t\t\t[disabled]="disabled" \n\t\t\t\t(change)="onMessageChange($event.target.value)">\n\t\t\t</textarea>\n\t\t\t<button type="button" class="btn btn-outline-primary m-3" (click)="updateMessage()">Update Message</button>\n\t  \t',formAssociated:!0})],m=[],o=[],i=[];return class{static{e=this}static{const u="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.pde)("value")],(0,s.G4)(null,null,a,{kind:"field",name:"message",static:!1,private:!1,access:{has:t=>"message"in t,get:t=>t.message,set:(t,e)=>{t.message=e}},metadata:u},o,i),(0,s.G4)(null,t={value:e},n,{kind:"class",name:e.name,metadata:u},null,m),e=t.value,u&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:u}),(0,s.zF)(e,m)}message=(0,s.zF)(this,o,"");updateMessage(){this.message="test message"}onMessageChange(t){console.log("onMessageChange",t)}constructor(){(0,s.zF)(this,i)}},e})(),o=(()=>{let t,e,a,n,m=[(0,l.uAl)({selector:"simple-custom-input",template:'<input type="number" class="form-control" name="custom-input" [id]="elId" [(value)]="numberValue">',formAssociated:!0})],o=[],i=[],u=[],c=[],r=[];return class{static{e=this}static{const d="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.pde)("id")],n=[(0,l.W_X)()],(0,s.G4)(null,null,a,{kind:"field",name:"elId",static:!1,private:!1,access:{has:t=>"elId"in t,get:t=>t.elId,set:(t,e)=>{t.elId=e}},metadata:d},i,u),(0,s.G4)(null,null,n,{kind:"field",name:"numberValue",static:!1,private:!1,access:{has:t=>"numberValue"in t,get:t=>t.numberValue,set:(t,e)=>{t.numberValue=e}},metadata:d},c,r),(0,s.G4)(null,t={value:e},m,{kind:"class",name:e.name,metadata:d},null,o),e=t.value,d&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:d}),(0,s.zF)(e,o)}elId=(0,s.zF)(this,i,void 0);numberValue=((0,s.zF)(this,u),(0,s.zF)(this,c,99));onInit(){setTimeout((()=>{this.numberValue=666}),3e3)}constructor(){(0,s.zF)(this,r)}},e})(),i=(()=>{let t,e,a,i,u=[(0,l.uAl)({selector:"simple-custom-form",extend:"form",template:'\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="test" class="form-label">test</label>\n\t\t\t\t<input id="test" name="test" type="text" [(value)]="model.test" />\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-input" class="form-label">Index</label>\n\t\t\t\t<simple-custom-input id="custom-input" name="index" [(value)]="model.index"></simple-custom-input>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<simple-custom-message name="message" [(value)]="model.message"></simple-custom-message>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-textarea" class="form-label">Textarea</label>\n\t\t\t\t<simple-custom-textarea id="custom-textarea" class="form-control" name="textArea" [(value)]="model.textArea"></simple-custom-textarea>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<button type="submit" class="btn btn-outline-success m-3">Submit</button>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t{{data |> json}}\n\t\t\t</div>\n\t  \t',imports:[n,m,o]})],c=[],r=[];return class{static{e=this}static{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.Z$l)("submit",["$event"])],i=[(0,l.Z$l)("formdata",["$event"])],(0,s.G4)(this,null,a,{kind:"method",name:"onSubmit",static:!1,private:!1,access:{has:t=>"onSubmit"in t,get:t=>t.onSubmit},metadata:n},null,r),(0,s.G4)(this,null,i,{kind:"method",name:"onFormData",static:!1,private:!1,access:{has:t=>"onFormData"in t,get:t=>t.onFormData},metadata:n},null,r),(0,s.G4)(null,t={value:e},u,{kind:"class",name:e.name,metadata:n},null,c),e=t.value,n&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),(0,s.zF)(e,c)}model=((0,s.zF)(this,r),{test:"test",index:5,message:"default message",textArea:"default textarea"});data={};onSubmit(t){t.preventDefault(),console.log("$event",t);const e=new FormData(t.target),a={};e.forEach(((t,e)=>Reflect.set(a,e,t))),this.data=a,console.log("data",this.data)}onFormData(t){console.log("formData",t.formData),t.formData.forEach(((t,e)=>console.log("key",e,"value",t)))}},e})()}}]);