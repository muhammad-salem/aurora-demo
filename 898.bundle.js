"use strict";(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([[898],{898:(t,n,e)=>{e.r(n),e.d(n,{ControlFlowExample:()=>s});var l=e(608),a=e(684);let s=(()=>{let t,n,e=[(0,a.uAl)({selector:"control-flow",template:'\n\t\tescape \\@ by adding double \\ before \\@\n\t\t@for(let item of list; let i = index, isFirst = first, isLast = last;) {\n\t\t\t@if(isFirst){\n\t\t\t\t<hr>\n\t\t\t}\n\t\t\t<p>index: {{i}}, item: {{item}}</p>\n\t\t\t@if(isLast){\n\t\t\t\t<hr>\n\t\t\t}\n\t\t}\n\t\tprint yes => @for(let x of []){x}@empty{y}@if(\'bool\'){e}@else if(false){b}@else{c}@for(let x of []){m}@empty{s}\n\t\t<hr>\n\t\tLocal template variables ==>  \\@let double = 2 * x; \\@let y = x + 2, z = x - 2;\n\t\t<hr>\n\t\t@let double = 2 * x;\n\t\t@let y = x + 2, z = x - 2;\n\t\t<div class="d-flex flex-column">\n\t\t\t<span class="ms-5"> x - 2 = {{z}}</span>\n\t\t\t<span class="ms-5">x = {{x}} </span>\n\t\t\t<span class="ms-5"> x + 2 = {{y}}</span>\n\t\t\t<span class="ms-5"> x * 2 = {{double}}</span>\n\t\t</div>\n\t\t<hr>\n\t\t<table class="table">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>number</th>\n\t\t\t\t\t<th>number + 2</th>\n\t\t\t\t\t<th>number - 2</th>\n\t\t\t\t\t<th>number * 2</th>\n\t\t\t\t\t<th>number / 2</th>\n\t\t\t\t\t<th>number % 2</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t@for(let num of [1,2,3,4,5]){\n\t\t\t\t\t@let a = num + 2, b = num -2, c = num * 2, d = num /2, e = num %2;\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{{num}}</td>\n\t\t\t\t\t\t<td>{{a}}</td>\n\t\t\t\t\t\t<td>{{b}}</td>\n\t\t\t\t\t\t<td>{{c}}</td>\n\t\t\t\t\t\t<td>{{d}}</td>\n\t\t\t\t\t\t<td>{{e}}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t\t<hr>\n\t'})],s=[];return class{static{n=this}static{const a="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,l.G4)(null,t={value:n},e,{kind:"class",name:n.name,metadata:a},null,s),n=t.value,a&&Object.defineProperty(n,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:a}),(0,l.zF)(n,s)}x=4;list=[1,2,3,4,5,6,7,8,9];interval;onInit(){this.interval=setInterval((()=>this.x++),1e3)}onDestroy(){clearInterval(this.interval)}},n})()}}]);