"use strict";(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([[432],{432:(t,e,n)=>{n.r(e),n.d(e,{ElementDetailsComponent:()=>s,ElementDetailsExampleComponent:()=>i});var a=n(608),l=n(684);let s=(()=>{let t,e,n=[(0,l.uAl)({selector:"element-details",encapsulation:"shadow-dom",template:'\n\t<style>\n\t\tdetails {\n\t\t\tfont-family: "Open Sans Light", Helvetica, Arial;\n\t\t}\n\t\t.name {\n\t\t\tfont-weight: bold;\n\t\t\tcolor: #217ac0;\n\t\t\tfont-size: 120%;\n\t\t}\n\t\th4 {\n\t\t\tmargin: 10px 0 -8px 0;\n\t\t}\n\t\th4 span {\n\t\t\tbackground: #217ac0;\n\t\t\tpadding: 2px 6px 2px 6px;\n\t\t}\n\t\th4 span {\n\t\t\tborder: 1px solid #cee9f9;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\th4 span {\n\t\t\tcolor: white;\n\t\t}\n\t\tdl, dt {\n\t\t\tmargin-top: 10px !important;\n\t\t}\n\t\t.attributes {\n\t\t\tmargin-left: 22px;\n\t\t\tfont-size: 90%;\n\t\t}\n\t\t.attributes p {\n\t\t\tmargin-left: 16px;\n\t\t\tfont-style: italic;\n\t\t}\n\t</style>\n\t<details>\n\t\t<summary>\n\t\t\t<span>\n\t\t\t\t<code class="name">&lt;<slot name="element-name">NEED NAME</slot>&gt;</code>\n\t\t\t\t<span class="desc"><slot name="description">NEED DESCRIPTION</slot></span>\n\t\t\t</span>\n\t\t</summary>\n\t\t<div class="attributes">\n\t\t\t<h4><span>Attributes</span></h4>\n\t\t\t<slot name="attributes"><p>None</p></slot>\n\t\t</div>\n\t</details>\n\t<hr />'})],s=[];return class{static{e=this}static{const l="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,a.G4)(null,t={value:e},n,{kind:"class",name:e.name,metadata:l},null,s),e=t.value,l&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:l}),(0,a.zF)(e,s)}},e})(),i=(()=>{let t,e,n=[(0,l.uAl)({selector:"element-details-example",template:'\n\t\t<element-details id="1">\n\t\t\t<span slot="element-name">slot</span>\n\t\t\t<span slot="description"> placeholder inside a web\n\t\t\t\tcomponent that users can fill with their own markup,\n\t\t\t\twith the effect of composing different DOM trees together.\n\t\t\t</span>\n\t\t\t<dl slot="attributes">\n\t\t\t\t<dt>name</dt>\n\t\t\t\t<dd>The name of the slot.</dd>\n\t\t\t</dl>\n\t\t</element-details>\n\t\t<element-details id="2">\n\t\t\t<span slot="element-name">template</span>\n\t\t\t<span slot="description">A mechanism for holding client-side\n\t\t\t\tcontent that is not to be rendered when a page is\n\t\t\t\tloaded but may subsequently be instantiated during\n\t\t\t\truntime using JavaScript.\n\t\t\t</span>\n\t\t</element-details>\n\t\t<element-details id="empty"></element-details>'})],s=[];return class{static{e=this}static{const l="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,a.G4)(null,t={value:e},n,{kind:"class",name:e.name,metadata:l},null,s),e=t.value,l&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:l}),(0,a.zF)(e,s)}},e})()}}]);