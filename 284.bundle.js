"use strict";(self.webpackChunk_ibyar_webpack=self.webpackChunk_ibyar_webpack||[]).push([[284],{284:(t,e,a)=>{a.r(e),a.d(e,{AdvancedForm:()=>u,CustomInputElement:()=>m,CustomInputValueControl:()=>i,CustomMessage:()=>o,CustomTextareaComponent:()=>n});var s=a(608),l=a(619);let n=(()=>{let t,e,a=[(0,l.uAl)({selector:"custom-textarea",extend:"textarea",formAssociated:!0})],n=[];return class{static{e=this}static{const l="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,s.G4)(null,t={value:e},a,{kind:"class",name:e.name,metadata:l},null,n),e=t.value,l&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:l}),(0,s.zF)(e,n)}text="";disabled=!1;_onChange=()=>{};onInit(){setTimeout((()=>this.updateTextarea("test textarea")),2e3)}writeValue({value:t,mode:e}){this.text="reset"!==e?t:"",console.log("textarea write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this.disabled=t,console.log("textarea disable change",t)}onTextareaChange(t){this._onChange(t),console.log("textarea value change",t)}updateTextarea(t){this.text=t,this.onTextareaChange(t)}},e})(),o=(()=>{let t,e,a,n=[(0,l.uAl)({selector:"custom-message",template:'\n\t\t\t<label for="message" class="form-label">Message</label>\n\t\t\t<textarea class="form-control"\n\t\t\t\tid="message"\n\t\t\t\tname="message-textarea"\n\t\t\t\trows="3"\n\t\t\t\t[(value)]="message" \n\t\t\t\t[disabled]="disabled" \n\t\t\t\t(change)="onMessageChange($event.target.value)">\n\t\t\t</textarea>\n\t\t\t<button type="button" class="btn btn-outline-primary m-3" (click)="updateMessage()">Update Message</button>\n\t  \t',formAssociated:!0})],o=[],i=[],m=[];return class{static{e=this}static{const u="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.pde)("value")],(0,s.G4)(null,null,a,{kind:"field",name:"message",static:!1,private:!1,access:{has:t=>"message"in t,get:t=>t.message,set:(t,e)=>{t.message=e}},metadata:u},i,m),(0,s.G4)(null,t={value:e},n,{kind:"class",name:e.name,metadata:u},null,o),e=t.value,u&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:u}),(0,s.zF)(e,o)}message=(0,s.zF)(this,i,"");disabled=((0,s.zF)(this,m),!1);_onChange=()=>{};writeValue({value:t,mode:e}){this.message="reset"!==e?t:"",console.log("message write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this.disabled=t,console.log("message disable change",t)}onMessageChange(t){this._onChange(t),console.log("message value change",t)}updateMessage(){this.message="test message",this.onMessageChange(this.message)}},e})();class i{_value=null;_disabled=!1;_onChange=()=>{};constructor(){setTimeout((()=>{this._value=666,this._onChange(this._value)}),3e3)}writeValue({value:t,mode:e}){this._value="reset"!==e?t:null,console.log("control write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this._disabled=t,console.log("control disabled state",t)}}let m=(()=>{let t,e,a,n,o=[(0,l.uAl)({selector:"custom-input",template:'<input type="number" class="form-control" name="custom-input" [id]="elId" [(value)]="numberValue">',formAssociated:i})],m=[],u=[],r=[],c=[],d=[];return class{static{e=this}static{const i="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.pde)("id")],n=[(0,l.pde)("value")],(0,s.G4)(null,null,a,{kind:"field",name:"elId",static:!1,private:!1,access:{has:t=>"elId"in t,get:t=>t.elId,set:(t,e)=>{t.elId=e}},metadata:i},u,r),(0,s.G4)(null,null,n,{kind:"field",name:"numberValue",static:!1,private:!1,access:{has:t=>"numberValue"in t,get:t=>t.numberValue,set:(t,e)=>{t.numberValue=e}},metadata:i},c,d),(0,s.G4)(null,t={value:e},o,{kind:"class",name:e.name,metadata:i},null,m),e=t.value,i&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:i}),(0,s.zF)(e,m)}elId=(0,s.zF)(this,u,void 0);numberValue=((0,s.zF)(this,r),(0,s.zF)(this,c,99));constructor(){(0,s.zF)(this,d)}},e})(),u=(()=>{let t,e,a,i,u=[(0,l.uAl)({selector:"custom-form",extend:"form",template:'\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="test" class="form-label">test</label>\n\t\t\t\t<input id="test" name="test" type="text" [(value)]="model.test" />\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-input" class="form-label">Index</label>\n\t\t\t\t<custom-input id="custom-input" name="index" [(value)]="model.index"></custom-input>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<custom-message name="message" [(value)]="model.message"></custom-message>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-textarea" class="form-label">Textarea</label>\n\t\t\t\t<custom-textarea id="custom-textarea" class="form-control" name="textArea" [(value)]="model.textArea"></custom-textarea>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<button type="submit" class="btn btn-outline-success m-3">Submit</button>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t{{data |> json}}\n\t\t\t</div>\n\t  \t',imports:[n,o,m]})],r=[],c=[];return class{static{e=this}static{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l.Z$l)("submit",["$event"])],i=[(0,l.Z$l)("formdata",["$event"])],(0,s.G4)(this,null,a,{kind:"method",name:"onSubmit",static:!1,private:!1,access:{has:t=>"onSubmit"in t,get:t=>t.onSubmit},metadata:n},null,c),(0,s.G4)(this,null,i,{kind:"method",name:"onFormData",static:!1,private:!1,access:{has:t=>"onFormData"in t,get:t=>t.onFormData},metadata:n},null,c),(0,s.G4)(null,t={value:e},u,{kind:"class",name:e.name,metadata:n},null,r),e=t.value,n&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),(0,s.zF)(e,r)}model=((0,s.zF)(this,c),{test:"test",index:5,message:"default message",textArea:"default textarea"});data={};onSubmit(t){t.preventDefault(),console.log("$event",t);const e=new FormData(t.target),a={};e.forEach(((t,e)=>Reflect.set(a,e,t))),this.data=a,console.log("data",this.data)}onFormData(t){console.log("formData",t.formData),t.formData.forEach(((t,e)=>console.log("key",e,"value",t)))}},e})()}}]);